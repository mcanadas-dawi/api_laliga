Proyecto: Desarrollo de una API para la Gestión de "La Liga"

Objetivo:
Desarrollar una API en PHP para gestionar las operaciones principales de "La Liga", permitiendo la administración de equipos, jugadores, partidos y 
estadísticas de temporada. La API debe satisfacer las necesidades operacionales, tales como mantener información detallada sobre los equipos y jugadores, 
gestionar el calendario de partidos y brindar acceso a estadísticas de rendimiento y clasificación.

Requisitos Funcionales:

1. Definición de Endpoints:
    - La API debe soportar operaciones CRUD (Crear, Leer, Actualizar y Borrar) para equipos, jugadores, partidos y estadísticas.
    - Los endpoints deben estar asociados a métodos HTTP (GET, POST, PUT, DELETE) y contar con ejemplos en JSON tanto de las solicitudes como de las respuestas.

    Ejemplos de Endpoints:
    - Obtener lista de equipos: `GET /equipos`
    - Registrar un nuevo partido: `POST /partidos`
    - Actualizar la información de un jugador: `PUT /jugadores/{id}`
    - Eliminar un partido registrado: `DELETE /partidos/{id}`

2. Base de Datos:
    - Diseñar un esquema relacional con tablas para equipos, jugadores, partidos y estadísticas de temporada.
    - Establecer relaciones entre las tablas, como la asociación de jugadores a equipos y de partidos a equipos.

3. Lógica de Negocio:
    - Implementar la lógica para gestionar partidos y actualizar estadísticas mediante diagramas de flujo.
    - Describir el flujo para el registro de un partido, desde la verificación de los equipos participantes hasta la actualización de estadísticas y posiciones en la tabla.
    - Describir el control de estadísticas de jugadores (goles, tarjetas, asistencias) y los criterios de clasificación de la liga.

4. Seguridad:
    - Implementar autenticación y autorización para garantizar el acceso seguro a los endpoints.
    - Realizar un análisis previo sobre el enfoque de seguridad más adecuado.

Implementación de Endpoints:

1. Obtener el listado de:
- TODOS LOS EQUIPOS
- TODOS LOS JUGADORES 
- DETALLES DE UN JUGADOR
- JUGADORES DE UN EQUIPO
- TODOS LOS PARTIDOS
- PARTIDO ESPECIFICO
- CLASIFICACION
- PICHICHI
- MAX ASISTENTE

2. Registrar:
    - PARTIDOS
    - EQUIPOS
    - JUGADORES

3. Actualizar la información sobre:
    - POSICION DEL JUGADOR
    - ESTADIO Y CAPACIDAD DEL EQUIPO
    - ENTRENADOR DE EQUIPO

4. Borrar:
- EQUIPO
- JUGADOR
- PARTIDO

Documentación:

1. Referencia de Endpoints:
    - Detalle completo de cada endpoint disponible en la API, incluyendo el método HTTP, URL, parámetros de entrada y ejemplos de respuestas.

2. Ejemplos en formato JSON:
    - Muestras de cómo realizar solicitudes y respuestas esperadas.

3. Casos de Uso:
    - Ejemplos prácticos sobre cómo usar la API en escenarios como la creación de un nuevo partido, consulta de estadísticas de jugadores o actualización de 
    información de equipos.